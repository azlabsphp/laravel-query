# Changelogs

## [2.1.0]

- Deprecated CustomQueryCriteria class
- Add a drop-in replacement of the CustomQueryCriteria class `EloquentBuilderQueryFilters::class`
- Remove code duplicate from query filters implementations
- Deprecated `HasIocContainer` trait in favor of `ContainerAware` trait
- Added `EloquentBuilderQueryFilters::trait` to centralize query filters implementation

## [2.1.1] 2022-03-29

- Added DMLManager::selectOne method for selecting single value even when query matches multiple row in table
- Removes dependencies to core package
- Add local implementation of `Drewlabs\Contracts\Data\Parser\ModelAttributeParser::interface` a.k.a `Drewlabs\LaravelQuery\ModelAttributesParser::class`
- Add local implementation of `Drewlabs\Contracts\Data\EnumerableQueryResult::interface` a.k.a `Drewlabs\LaravelQuery\EnumerableQueryResult::class`

## [2.2.0] 2022-04-12

- Add replace for Model::getModelRelationLoadersNames Model::getDeclaredRelations()
- Added URLRoutableModelAware as URLRoutableModel wrapper trait method

## [2.2.2] 2022-04-14

- Added a useMapQueryResult transformation function to Drewlabs\LaravelQuery\Proxy namespace

## [2.3.0] 2022-05-05

- Add support for Laravel ^9.0

## [2.3.1] 2022-05-11

- Moves query filters builder to a dedicated class and deprecated query filter builders global function
- Add support for multiple orderBy column

## [2.3.2] 2022-05-15

- Fixed bug with add method being called on the model instead of create method

## [2.3.3] 2022-05-15

- Bug fix for when $callback is passed as single value to select DMLManager method

## [2.3.3] 2022-05-27

- Bug fix when setting/modifying model multiple relations at once

## [2.3.6] 2022-06-22

- Bug fix in QueryColumns::asTuple() implementation for nested relations

## [2.3.7] 2022-06-23

- Bug fix for nested column for select query, optimize selector function

## [2.5.0] 2022-10-21

- Add implementation that simplify action handlers implementation for DML queries
- Added `SelectQueryAction`, `DeleteQueryAction`, `UpdateQueryAction` and `CreateQueryAction` functions for creating action of type `SELECT`, `DELETE`, `UPDATE`, `CREATE` to avoid typo error when creating database quer actions.
- Added `DMLQueryCommandInterface` returned by `useActionQueryCommand` proxy function
- Added `InvalidDMLQueryActionException` exception class
- Added support for `FiltersInterface` in `select()`, `update()` and `delete()` method of the `DMLManager`
- Added support for attributes as `object`, `viewModel` in `create()` and `update()` method of `DMLManager`

## [2.5.1] 2022-10-24

- Ported illuminate `HasUuids` trait to this package which add `uuid` columns support to eloquent models
- Fixed bugs in QueryFiltersBuilder class

## [2.5.2] 2022-11-02

- Added support for query insensitive query method
- Add match for `exists`, `in`, `notin`, `notnull`, `ornotnull`, `isnull`, `sort` query methods

## [3.0.x] 2023-02-08

- Completely reviewed implementation API and removed deprecated classes, method, traits
- Moved Eloquent related class and implementation to dedicated namespace
- Removed unused and unnecessary trait from the `Traits` namespace
- Replace `DMLQueryCommandInterface` with `QueryLanguageCommandInterface`
- Removed unused `TransactionUtils` interface
- Removed Attributes parser and moved implementations to QueryLanguage class
- Removed `LinkAwareAttribute` trait
- Removed `PreparesQueryBuilder` trait
- Removed `ModelTypeException` exception class
- Renameed `DMLException` to `QueryException` class
- Removed `EloquentModel` base extension class for models
